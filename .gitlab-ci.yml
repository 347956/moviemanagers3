image: gradle:latest

stages:
  - build
  - test
  - docker  
  - sonarqube-check
  - release
  
build:
  stage: build
  script: 
    - ./gradlew build -x test
    - ./gradlew --stop
    - echo "Build Completed UwU"

test:
  stage: test
  script:
    - ./gradlew test
    - ./gradlew --stop
    - echo "Test Completed UwU"
  allow_failure: true

release:
 stage: docker
 tags:
   - shell
 image: docker
 variables:
   IMAGE_NAME: "docker101tutorial:moviemanagerbackend"
 script:
   - ./gradlew assemble
   - docker build -t teunbuis/$IMAGE_NAME .
   - docker login -u teunbuis -p $Docker_Hub_Token
   - docker push teunbuis/$IMAGE_NAME

sonarqube-check:
  stage: sonarqube-check
  image: gradle:jre11-slim
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - ./gradlew test
    - ./gradlew sonarqube
    - ./gradlew --stop
  allow_failure: true
  only:
    - main # or the name of your main branch

deploy:
  stage: release
  tags: 
    - shell
  script:
    - docker stop movieManagerBackEnd
    - docker run -d -p 8080:8080 --network="spring-net" --rm --name movieManagerBackEnd teunbuis/docker101tutorial:moviemanagerbackend
